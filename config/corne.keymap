/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {

        keymap {
                compatible = "zmk,keymap";

                layer_0 {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | MO1 | SPC |   | ENT | MO2  | ALT |
                        bindings = <
   &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I         &kp O        &kp P        &kp BSPC
   &sk LCTRL &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K         &kp L        &kp SEMI     &kp SQT
   &sk LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA     &kp DOT      &kp FSLH     &sk RSHFT 
                  &kp LGUI &adv_tdl1 LCTRL &kp SPACE   &kp RET &adv_tdl2 LSHIFT &kp RALT
                        >;
                };

                layer_1 {
// -----------------------------------------------------------------------------------------
// |  TAB | PGDN |     |  UP |     | PGUP |   | INS |     |     |     |     | BKSP |
// | CTRL |  ESC | LFT | DWN | RGT | SCRN |   | DEL |     |     |     |     |      |
// | SHFT |  skC | skA | skS | skG |      |   |     | skG | skS | skA | skC | SHFT |
//                     | GUI |     | SPC  |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp PG_DN    &trans       &kp UP       &trans       &kp PG_UP   &kp INS     &trans     &trans   &trans     &trans     &kp BSPC
   &kp LCTRL  &kp ESC      &kp LEFT     &kp DOWN     &kp RIGHT    &kp PSCRN   &kp DEL     &trans     &trans   &trans     &trans     &trans
   &kp LSHFT  &sk LSHFT    &sk LCTRL    &sk LALT     &sk LGUI     &trans      &kp CLCK    &sk LGUI   &sk LALT &sk LCTRL  &sk LSHFT  &kp RSHFT
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                layer_2 {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | SHFT |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6       &kp N7       &kp N8          &kp N9     &kp N0      &kp BSPC
   &kp LCTRL  &kp EXCL  &kp AT    &kp HASH   &kp DLLR &kp PRCNT   &kp CARET    &kp AMPS     &kp KP_ASTERISK &kp LPAR   &kp RPAR    &trans
   &kp LSHFT  &kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &kp F6       &kp F7       &kp F8          &kp F9     &kp F10     &kp RSHFT
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                layer_3 {
// -----------------------------------------------------------------------------------------
// |  TAB |  ~  |  `  |  _  |  -  |     |   |     |  +  |  =  |  \   |  |  | BKSP |
// | CTRL |     |  (  |  [  |  {  |     |   |     |  }  |  ]  |  )   |  :  |   "  |
// | SHFT |     |     |     |     |     |   |     |     |  <  |  >   |  ?  | SHFT |
//                    | GUI |     | SPC |   | ENT |     | OUT |
                        bindings = <
   &kp TAB   &kp TILDE    &kp GRAVE &kp UNDER  &kp MINUS   &trans      &trans     &kp PLUS   &kp EQUAL  &kp BSLH   &kp PIPE   &kp BSPC
   &kp LCTRL &trans       &kp LPAR  &kp LBKT   &kp LBRC    &trans      &trans     &kp RBRC   &kp RBKT   &kp RPAR   &kp COLON  &kp DQT  
   &kp LSHFT &trans       &trans    &trans     &trans      &trans      &trans     &trans     &kp LT     &kp GT     &kp QMARK  &kp RSHFT  
                           &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &out OUT_TOG
                        >;
                };

               layer_4 {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |      |      |      |      |      |
// |      |     |     |     |     |     |   |BTCLR| BT 0 | BT 1 | BT 2 | BT 3 | BT 4 |
// |      |     |     |     |     |     |   |     |      |      |      |      |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &trans       &trans    &trans    &trans    &trans      &trans       &trans       &trans          &trans          &trans         &trans
   &trans     &trans       &trans    &trans    &trans    &trans      &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4
   &trans     &trans       &trans    &trans    &trans    &trans      &trans       &trans       &trans          &trans          &trans         &trans
                                   &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };
        };				

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                    if-layers = <1 2>;
                    then-layer = <3>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_layer4 {
                        timeout-ms = <150>;
                        key-positions = <36 41>;
                        bindings = <&tog 4>;
                };
        };

        behaviors {
                tdl1: tap_dance_layer_1 {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&lt 1 LCTRL>, <&tog 1>;
                };

                tdl2: tap_dance_layer_2 {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&mo 2>, <&tog 2>;
                };

                // Tap to sticky, Then other TDL
                adv_tdl_1: advanced_tap_dance_layer_1 {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    bindings = <&sk>, <&tdl1>;
                };

                // Tap to sticky, Then other TDL
                adv_tdl_2: advanced_tap_dance_layer_2 {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    bindings = <&sk>, <&tdl2>;
                };
        };

};
